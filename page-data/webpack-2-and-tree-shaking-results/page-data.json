{"componentChunkName":"component---src-templates-blog-post-js","path":"/webpack-2-and-tree-shaking-results/","webpackCompilationHash":"adc5a099dfbc8e80d26d","result":{"data":{"site":{"siteMetadata":{"title":"Jeremy Abroad","author":"Jeremy Bernier"}},"markdownRemark":{"id":"dac50ab5-4245-5504-8fd6-9fcc0d973cf0","excerpt":"Recently made the upgrade to Webpack 2 because I wanted the tree shaking functionality. Took about a day. Here are some tips, along with the…","html":"<p>Recently made the upgrade to Webpack 2 because I wanted the tree shaking functionality. Took about a day. Here are some tips, along with the results.</p>\n<h3>What is Tree-Shaking?</h3>\n<p>Tree-Shaking (popularized by Rollup) is the elimination of unused exports.</p>\n<p>Unfortunately Webpack 2’s Tree Shaking doesn’t seem to eliminate unused exports inside packages — at least in my project (eg. all of Lodash’s functions are included inside my bundle including functions I don’t use).</p>\n<h3>Upgrading to Webpack 2</h3>\n<p><a href=\"https://webpack.js.org/guides/migrating/\">Webpack’s official migration guide</a> is fairly comprehensive so I won’t waste time regurgitating what’s already there.</p>\n<h3>In your .babelrc’s es2015 preset, disable modules</h3>\n<p><strong>Before:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;presets&quot;: [&quot;es2015&quot;, &quot;react&quot;],</code></pre></div>\n<p><strong>After:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;presets&quot;: [\n  [&quot;es2015&quot;, {&quot;loose&quot;: true, &quot;modules&quot;: false}],\n  &quot;react&quot;\n]</code></pre></div>\n<p>This will reduce the file size of your outputted JS.</p>\n<p><strong>Ensure that you’re not including the “react-hot-loader/babel” Babel plugin in your .babelrc file!</strong></p>\n<p>Tree-shaking won’t work if this plugin is added (wasted a lot of time on this).</p>\n<h3>Disabling .babelrc and importing your own config in Webpack (OPTIONAL)</h3>\n<p>Modify the “babel-loader” section in your Webpack config file to look like this (where .babelrc.js is a JS file containing your .babelrc config)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module: {\n  rules: [\n    {\n      test: /\\.js$/,\n      use: {\n        loader: &#39;babel-loader&#39;,\n        options: Object.assign({ babelrc: false }, require(&#39;./babelrc.js&#39;))\n      },\n      exclude: /node_modules/,\n    },\n  ]\n}</code></pre></div>\n<h3>Ignore the Warning</h3>\n<p>Now you will get a warning on every Webpack compilation that looks like this:</p>\n<blockquote>\n<p>(node:35513) DeprecationWarning: loaderUtils.parseQuery() received a non-string value which can be problematic, see <a href=\"https://github.com/webpack/loader-utils/issues/56\">https://github.com/webpack/loader-utils/issues/56</a>\nparseQuery() will be replaced with getOptions() in the next major version of loader-utils.</p>\n</blockquote>\n<p>Just ignore it, it’s a problem with one of your Webpack loaders and has nothing to do with you (seems that Webpack will be disabling this warning in a future update).</p>\n<h3>Results</h3>\n<p><strong>Webpack 1.13.2</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Version: webpack 1.13.2\nTime: 25305ms\n                                        Asset       Size  Chunks             Chunk Names\n     js/contact_e752e5854d7a6f7422c9.chunk.js    1.43 kB       4  [emitted]  contact\n                          chunk-manifest.json  274 bytes          [emitted]\n     js/catalog_d3fe90090a995c7254ef.chunk.js    41.9 kB       1  [emitted]  catalog\n         js/how_63fabed843b4144effd8.chunk.js    1.35 kB       2  [emitted]  how\n     js/finance_7ae1304d69a4e204bd20.chunk.js    1.56 kB       3  [emitted]  finance\n     js/vendor_876e13b789b38023cf83.bundle.js     394 kB       0  [emitted]  vendor\n       js/about_467405304c50e28a9c63.chunk.js    1.44 kB       5  [emitted]  about\n       js/main_d6bdb9cbe29bc1a164e5.bundle.js     342 kB       6  [emitted]  main\ncss/main_19b822f00587cc2e781c3bbe6bc852f3.css     205 kB       6  [emitted]  main\n                                manifest.json  467 bytes          [emitted]\n                                sw-toolbox.js    17.4 kB          [emitted]\n   [0] multi vendor 136 bytes {0} [built]\n    + 851 hidden modules\nChild extract-text-webpack-plugin:\n        + 2 hidden modules</code></pre></div>\n<p><strong>Webpack 2.2.1</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Version: webpack 2.2.1\nTime: 22533ms\n                                        Asset       Size  Chunks                    Chunk Names\n       js/about_489704d5cc668862b9be.chunk.js    40.1 kB       0  [emitted]         about\n       js/main_ba108242d5c525cd6d9d.bundle.js     325 kB       1  [emitted]  [big]  main\n                          chunk-manifest.json   90 bytes          [emitted]\n     js/vendor_a9ebdde44b1b55d21147.bundle.js     396 kB       2  [emitted]  [big]  vendor\ncss/main_70a9bee7273fab9ef275864d6bda5aca.css     205 kB       1  [emitted]         main\n                                manifest.json  235 bytes          [emitted]\n                                sw-toolbox.js    17.4 kB          [emitted]\n   [1] ./~/react/react.js 56 bytes {2} [built]\n  [18] ./~/react-redux/lib/index.js 475 bytes {2} [built]\n  [42] ./~/lodash/lodash.js 527 kB {2} [built]\n  [61] ./~/react-router/lib/index.js 3.62 kB {2} [built]\n  [72] ./~/react-helmet/lib/Helmet.js 23.4 kB {2} [built]\n  [89] ./src/modules/analytics/AnalyticsLib.js 1.54 kB {1} [built]\n [102] ./~/redux/es/index.js 1.08 kB {2} [built]\n [103] ./~/react-dom/index.js 63 bytes {2} [built]\n [134] ./~/react-router-scroll/lib/index.js 512 bytes {2} [built]\n [206] ./src/client/Device.js 856 bytes {1} [built]\n [207] ./~/history/lib/createBrowserHistory.js 3.38 kB {2} [built]\n [208] ./~/redux-thunk/lib/index.js 529 bytes {2} [built]\n [320] ./src/optimizely/client/index.js 464 bytes {1} [built]\n [840] ./src/client.js 3.36 kB {1} [built]\n [841] multi babel-polyfill lodash react react-dom react-helmet redux redux-thunk react-redux react-router react-router-scroll 136 bytes {2} [built]\n    + 853 hidden modules\nChild extract-text-webpack-plugin:\n       [0] ./~/css-loader/lib/css-base.js 2.19 kB {0} [built]\n       [1] ./~/base64-js/index.js 3.48 kB {0} [built]\n       [2] ./~/buffer/index.js 48.6 kB {0} [built]\n       [3] ./~/ieee754/index.js 2.05 kB {0} [built]\n       [4] ./~/isarray/index.js 132 bytes {0} [built]\n       [5] (webpack)/buildin/global.js 509 bytes {0} [built]\n       [6] ./~/css-loader!./~/postcss-loader!./~/sass-loader/lib/loader.js!./src/style/index.scss 205 kB {0} [built]</code></pre></div>\n<p>main.js went from 342 KB to 325 KB, a 5% decrease in file size. Not exactly drastic, but I’ll take it.</p>\n<p>Note that about.js went from 1.44 kB to 40.1 kB and the number of chunks were reduced. This is because apparently the minChunkSizePlugin which had minChunkSize=50000 (50kb) wasn’t working before for whatever reason. The tiny &#x3C;2kb chunks were eliminated and merged into about.js.</p>\n<p>But in case you were curious what the Webpack 2.0 output is with minChunks disabled, here it is:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Version: webpack 2.2.1\nTime: 21718ms\n                                        Asset       Size  Chunks                    Chunk Names\n       js/main_ba108242d5c525cd6d9d.bundle.js     325 kB       5  [emitted]  [big]  main\n     js/catalog_bef2c4168fd2a654ff5c.chunk.js      36 kB       0  [emitted]         catalog\n     js/finance_aa3df57fc02b5cf34182.chunk.js    1.16 kB       2  [emitted]         finance\n     js/contact_d26e17e05dadd81271dc.chunk.js    1.04 kB       3  [emitted]         contact\n       js/about_21fe64e0b5fde043e86d.chunk.js    1.05 kB       4  [emitted]         about\n         js/how_1d3b0d4332d795dd1fa3.chunk.js  968 bytes       1  [emitted]         how\n                          chunk-manifest.json  274 bytes          [emitted]\n     js/vendor_a9ebdde44b1b55d21147.bundle.js     396 kB       6  [emitted]  [big]  vendor\ncss/main_70a9bee7273fab9ef275864d6bda5aca.css     205 kB       5  [emitted]         main\n                                manifest.json  467 bytes          [emitted]\n                                sw-toolbox.js    17.4 kB          [emitted]</code></pre></div>\n<p>(I’d make a table comparing the file sizes, but Medium doesn’t let you make tables…I know, it’s crazy)</p>\n<p>Catalog.js went from to 41.9 KB to 36 KB, a 14% file size reduction</p>\n<hr>\n<p>Overall we saw a slight reduction in file size, but nothing to write home about. That being said, our site is very small. If it were larger, then the file size reduction would’ve been more significant.</p>\n<p>Was this worth the effort and opportunity cost of upgrading? From a business standpoint, probably not. But at least I got this blog post out of it.</p>\n<p><em>(Here’s a link to this article on <a href=\"https://medium.com/@jberniertech/upgrading-to-webpack-2-and-tree-shaking-results-e68bd203c974\">Medium</a>)</em></p>","frontmatter":{"title":"Upgrading to Webpack 2, and Tree-Shaking Results","date":"March 15, 2017"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/webpack-2-and-tree-shaking-results/","previous":{"fields":{"slug":"/excess-management-costing-3-trillion/"},"frontmatter":{"title":"Excess Management Is Costing the U.S. $3 Trillion Per Year","tags":["politics"]}},"next":{"fields":{"slug":"/z-indexes-explained/"},"frontmatter":{"title":"Z-Indexes in CSS Explained","tags":["tech"]}}}}}